import { memo, useState } from "react";
import {
    Box,
    Typography,
    Accordion,
    AccordionSummary,
    AccordionDetails,
    TextField,
    Button,
    Card,
    CardContent,
    Avatar,
    Stack,
    Divider,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import SendIcon from "@mui/icons-material/Send";
import SupportAgentIcon from "@mui/icons-material/SupportAgent";
import PersonIcon from "@mui/icons-material/Person";

const SupportPage = () => {
    const [messages, setMessages] = useState([
        { from: "support", text: "Xin ch√†o! B·∫°n c·∫ßn h·ªó tr·ª£ g√¨ kh√¥ng?" },
    ]);
    const [input, setInput] = useState("");

    const handleSend = () => {
        if (!input.trim()) return;
        setMessages([...messages, { from: "user", text: input }]);
        setInput("");
    };

    return (
        <Box
            sx={{
                minHeight: "100vh",
                p: 4,
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                gap: 4,
            }}
        >
            <Typography variant="h4" fontWeight="bold">
                H·ªñ TR·ª¢ KH√ÅCH H√ÄNG
            </Typography>

            {/* FAQ */}
            <Card sx={{ width: "100%", maxWidth: 800 }}>
                <CardContent>
                    <Typography variant="h6" gutterBottom>
                        ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                    </Typography>
                    <Accordion>
                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                            <Typography>L√†m th·∫ø n√†o ƒë·ªÉ m∆∞·ª£n s√°ch?</Typography>
                        </AccordionSummary>
                        <AccordionDetails sx={{ fontWeight: "bold" }}>
                            B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p, ch·ªçn s√°ch v√† b·∫•m n√∫t "M∆∞·ª£n s√°ch". Sau ƒë√≥ ƒë·∫øn
                            th∆∞ vi·ªán v√† nh·∫≠n s√°ch.
                        </AccordionDetails>
                    </Accordion>
                    <Accordion>
                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                            <Typography>L√†m th·∫ø n√†o ƒë·ªÉ th√™m s√°ch v√†o danh s√°ch y√™u th√≠ch?</Typography>
                        </AccordionSummary>
                        <AccordionDetails sx={{ fontWeight: "bold" }}>
                            V√†o trang chi ti·∫øt c·ªßa s√°ch v√† b·∫•m n√∫t "Y√™u th√≠ch". S√°ch s·∫Ω ƒë∆∞·ª£c l∆∞u trong m·ª•c
                            "Danh s√°ch y√™u th√≠ch" c·ªßa b·∫°n.
                        </AccordionDetails>
                    </Accordion>

                    <Accordion>
                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                            <Typography>T√¥i c√≥ th·ªÉ xem l·ªãch s·ª≠ m∆∞·ª£n s√°ch ·ªü ƒë√¢u?</Typography>
                        </AccordionSummary>
                        <AccordionDetails sx={{ fontWeight: "bold" }}>
                            B·∫°n c√≥ th·ªÉ v√†o m·ª•c "L·ªãch s·ª≠ m∆∞·ª£n" trong t√†i kho·∫£n ƒë·ªÉ xem danh s√°ch c√°c s√°ch ƒë√£
                            m∆∞·ª£n v√† tr·∫£.
                        </AccordionDetails>
                    </Accordion>

                    <Accordion>
                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                            <Typography>N·∫øu t√¥i l√†m m·∫•t s√°ch th√¨ ph·∫£i x·ª≠ l√Ω th·∫ø n√†o?</Typography>
                        </AccordionSummary>
                        <AccordionDetails sx={{ fontWeight: "bold" }}>
                            B·∫°n c·∫ßn li√™n h·ªá tr·ª±c ti·∫øp v·ªõi th·ªß th∆∞ ƒë·ªÉ b·ªìi th∆∞·ªùng ho·∫∑c thay th·∫ø cu·ªën s√°ch ƒë√£ m·∫•t
                            theo quy ƒë·ªãnh c·ªßa th∆∞ vi·ªán.
                        </AccordionDetails>
                    </Accordion>

                    <Accordion>
                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>
                            <Typography>T√¥i c√≥ th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n kh√¥ng?</Typography>
                        </AccordionSummary>
                        <AccordionDetails sx={{ fontWeight: "bold" }}>
                            C√≥, b·∫°n c√≥ th·ªÉ v√†o ph·∫ßn "C·∫≠p nh·∫≠t t√†i kho·∫£n" ƒë·ªÉ thay ƒë·ªïi m·∫≠t kh·∫©u, email ho·∫∑c th√¥ng tin li√™n h·ªá c·ªßa m√¨nh.
                        </AccordionDetails>
                    </Accordion>
                </CardContent>
            </Card>

            {/* Contact Form */}
            <Card sx={{ width: "100%", maxWidth: 800 }}>
                <CardContent>
                    <Typography variant="h6" gutterBottom>
                        üì© Li√™n h·ªá v·ªõi ch√∫ng t√¥i
                    </Typography>
                    <Stack spacing={2}>
                        <TextField label="T√™n c·ªßa b·∫°n" fullWidth />
                        <TextField label="Email c·ªßa b·∫°n" type="email" fullWidth />
                        <TextField
                            label="V·∫•n ƒë·ªÅ b·∫°n g·∫∑p ph·∫£i l√† g√¨?"
                            multiline
                            rows={4}
                            fullWidth
                        />
                        <Button variant="contained" fullWidth>
                            G·ª≠i
                        </Button>
                    </Stack>
                </CardContent>
            </Card>

            {/* Chat Box */}
            <Card sx={{ width: "100%", maxWidth: 800 }}>
                <CardContent>
                    <Typography variant="h6" gutterBottom>
                        üí¨ Tr√≤ chuy·ªán tr·ª±c tuy·∫øn
                    </Typography>
                    <Box
                        sx={{
                            height: 300,
                            overflowY: "auto",
                            bgcolor: "#fff",
                            borderRadius: 2,
                            border: "1px solid #e0e0e0",
                            p: 2,
                            mb: 2,
                        }}
                    >
                        {messages.map((msg, idx) => (
                            <Stack
                                key={idx}
                                direction="row"
                                spacing={1}
                                justifyContent={msg.from === "user" ? "flex-end" : "flex-start"}
                                mb={1}
                            >
                                {msg.from === "support" && (
                                    <Avatar sx={{ bgcolor: "primary.main" }}>
                                        <SupportAgentIcon />
                                    </Avatar>
                                )}
                                <Box
                                    sx={{
                                        p: 1.5,
                                        borderRadius: 2,
                                        maxWidth: "70%",
                                        bgcolor:
                                            msg.from === "user" ? "primary.light" : "grey.200",
                                    }}
                                >
                                    <Typography variant="body2">{msg.text}</Typography>
                                </Box>
                                {msg.from === "user" && (
                                    <Avatar sx={{ bgcolor: "secondary.main" }}>
                                        <PersonIcon />
                                    </Avatar>
                                )}
                            </Stack>
                        ))}
                    </Box>
                    <Divider sx={{ mb: 2 }} />
                    <Stack direction="row" spacing={2}>
                        <TextField
                            fullWidth
                            size="small"
                            placeholder="Nh·∫≠p tin nh·∫Øn..."
                            value={input}
                            onChange={(e) => setInput(e.target.value)}
                        />
                        <Button
                            variant="contained"
                            endIcon={<SendIcon />}
                            onClick={handleSend}
                        >
                            G·ª≠i
                        </Button>
                    </Stack>
                </CardContent>
            </Card>
        </Box>
    );
};

export default memo(SupportPage);
